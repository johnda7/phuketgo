import React, { useState } from 'react';
import FilterSection from './FilterSection';
import CategoryGrid from './CategoryGrid';
import { categories, getAllTags, getAllTours } from '../../data/toursData';
import { filterTours, sortTours, groupToursByCategory, getInitialFilters } from '../../utils/filterUtils';

const ExcursionCategories = ({ onCategorySelect }) => {
  const [activeFilters, setActiveFilters] = useState(getInitialFilters());
  const [searchTerm, setSearchTerm] = useState('');
  const [sortBy, setSortBy] = useState('popular');
  const [showFilters, setShowFilters] = useState(false);
  const [selectedTags, setSelectedTags] = useState([]);
  const [viewMode, setViewMode] = useState('grid');

  // Get all unique tags and tours
  const allTags = getAllTags();
  const allTours = getAllTours();

  // Handle tag filtering
  const handleTagClick = (tag) => {
    setSelectedTags(prev => 
      prev.includes(tag) 
        ? prev.filter(t => t !== tag)
        : [...prev, tag]
    );
  };

  // Clear all filters
  const clearAllFilters = () => {
    setSearchTerm('');
    setSelectedTags([]);
    setActiveFilters(getInitialFilters());
  };

  // Filter and sort tours
  const filteredTours = filterTours(allTours, activeFilters, searchTerm, selectedTags);
  const sortedTours = sortTours(filteredTours, sortBy);
  const groupedTours = groupToursByCategory(sortedTours, categories);

  return (
    <section className="py-20 bg-gradient-to-b from-gray-50 to-white" id="excursions">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <h2 className="text-5xl font-bold text-gray-800 mb-6">
            <span className="bg-gradient-to-r from-cyan-600 to-teal-500 bg-clip-text text-transparent">
              –≠–ö–°–ö–£–†–°–ò–ò –ü–û –ü–•–£–ö–ï–¢–£
            </span>
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
            –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —Å–∞–º—ã–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –æ—Å—Ç—Ä–æ–≤–µ –ü—Ö—É–∫–µ—Ç. 
            –û—Ç –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ —á–∏—Å—Ç—ã—Ö –≤–æ–¥ –ê–Ω–¥–∞–º–∞–Ω—Å–∫–æ–≥–æ –º–æ—Ä—è –¥–æ –≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–≤–µ—Å—Ç–Ω—è–∫–æ–≤—ã—Ö —Å–∫–∞–ª.
          </p>
        </div>

        {/* Search and Filter Section */}
        <FilterSection
          activeFilters={activeFilters}
          setActiveFilters={setActiveFilters}
          searchTerm={searchTerm}
          setSearchTerm={setSearchTerm}
          sortBy={sortBy}
          setSortBy={setSortBy}
          viewMode={viewMode}
          setViewMode={setViewMode}
          showFilters={showFilters}
          setShowFilters={setShowFilters}
          selectedTags={selectedTags}
          setSelectedTags={setSelectedTags}
          allTags={allTags}
          handleTagClick={handleTagClick}
          clearAllFilters={clearAllFilters}
          resultsCount={sortedTours.length}
          totalCount={allTours.length}
        />
        
        {/* Categories Grid */}
        <CategoryGrid
          groupedTours={groupedTours}
          viewMode={viewMode}
          onCategorySelect={onCategorySelect}
          handleTagClick={handleTagClick}
        />

        {/* No results message */}
        {groupedTours.length === 0 && (
          <div className="text-center py-12">
            <div className="text-6xl mb-4">üîç</div>
            <h3 className="text-2xl font-bold text-gray-800 mb-2">–≠–∫—Å–∫—É—Ä—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p className="text-gray-600 mb-6">
              {searchTerm ? `–ü–æ –∑–∞–ø—Ä–æ—Å—É "${searchTerm}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.` : '–ù–∏ –æ–¥–Ω–∞ —ç–∫—Å–∫—É—Ä—Å–∏—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º.'}
              <br />–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã.
            </p>
            <div className="flex justify-center gap-4">
              <button
                onClick={clearAllFilters}
                className="bg-cyan-600 text-white px-6 py-3 rounded-lg hover:bg-cyan-700 transition-colors"
              >
                –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã
              </button>
              {searchTerm && (
                <button
                  onClick={() => setSearchTerm('')}
                  className="bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700 transition-colors"
                >
                  –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫
                </button>
              )}
            </div>
          </div>
        )}

        {/* Quick stats */}
        {groupedTours.length > 0 && (
          <div className="mt-12 text-center">
            <div className="bg-gradient-to-r from-cyan-500 to-teal-500 text-white rounded-2xl p-6 inline-block">
              <div className="flex items-center justify-center gap-8">
                <div>
                  <div className="text-2xl font-bold">{sortedTours.length}</div>
                  <div className="text-cyan-100 text-sm">–≠–∫—Å–∫—É—Ä—Å–∏–π –Ω–∞–π–¥–µ–Ω–æ</div>
                </div>
                <div>
                  <div className="text-2xl font-bold">{groupedTours.length}</div>
                  <div className="text-cyan-100 text-sm">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</div>
                </div>
                <div>
                  <div className="text-2xl font-bold">
                    {Math.min(...sortedTours.map(t => t.priceNum))}‡∏ø
                  </div>
                  <div className="text-cyan-100 text-sm">–ú–∏–Ω. —Ü–µ–Ω–∞</div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </section>
  );
};

export default ExcursionCategories;